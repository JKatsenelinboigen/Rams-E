{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abc\\\\Documents\\\\Projects\\\\RAMS-E\\\\frontend\\\\src\\\\components\\\\IngredientsForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Card, Container, Grid, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientsForm(props) {\n  _s();\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [newIngredient, setNewIngredient] = useState(\"\");\n  function handleAddIngredient(ingredient) {\n    var csv = ingredient.split(\",\");\n    console.log(\"ings\" + ingredientsList);\n    if (newIngredient.length > 0) {\n      var newList = [...ingredientsList, ...csv];\n      setIngredientsList(newList);\n      props.parentSetArray(newList);\n      setNewIngredient(\"\");\n    }\n  }\n  function handleRemoveIngredient(event) {\n    var index = parseInt(event.currentTarget.id);\n    var newList = [...ingredientsList];\n    newList.splice(index, 1);\n    setIngredientsList(newList);\n  }\n  var i = -1;\n  var output = /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginBottom: \"5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"newIngredient\",\n          style: {\n            width: \"100%\"\n          },\n          value: newIngredient,\n          helperText: \"Enter ingredients one at a time or comma separated\",\n          onChange: e => setNewIngredient(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: styles.addButton,\n          id: \"addIngredient\",\n          variant: \"contained\",\n          onClick: () => {\n            handleAddIngredient(newIngredient);\n          },\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"row\",\n      container: true,\n      spacing: 2,\n      style: styles.grid,\n      children: ingredientsList.map(function (ingredient) {\n        i++;\n        console.log(ingredientsList);\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: styles.inputIngredient,\n            id: \"\" + i,\n            children: [ingredient, /*#__PURE__*/_jsxDEV(Button, {\n              id: \"\" + i,\n              variant: \"contained\",\n              onClick: e => {\n                handleRemoveIngredient(e);\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, ingredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, \"\" + ingredientsList, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n  return output;\n}\n_s(IngredientsForm, \"A49Aia3EMji4uFCVSE1yg/5kNiQ=\");\n_c = IngredientsForm;\nconst styles = {\n  addButton: {\n    backgroundColor: \"#a65021\",\n    width: \"100%\",\n    height: \"70%\"\n  },\n  inputIngredient: {\n    fontFamily: \"Garamond\",\n    width: \"100%\",\n    fontSize: \"24px\",\n    display: 'flex',\n    justifyContent: \"space-between\",\n    paddingLeft: \"5%\",\n    paddingRight: \"5%\",\n    paddingTop: \"2%\",\n    paddingBottom: \"2%\"\n  },\n  grid: {}\n};\nexport default IngredientsForm;\nvar _c;\n$RefreshReg$(_c, \"IngredientsForm\");","map":{"version":3,"names":["React","useState","Button","Card","Container","Grid","TextField","IngredientsForm","props","ingredientsList","setIngredientsList","newIngredient","setNewIngredient","handleAddIngredient","ingredient","csv","split","console","log","length","newList","parentSetArray","handleRemoveIngredient","event","index","parseInt","currentTarget","id","splice","i","output","marginBottom","width","e","value","styles","addButton","grid","map","inputIngredient","backgroundColor","height","fontFamily","fontSize","display","justifyContent","paddingLeft","paddingRight","paddingTop","paddingBottom"],"sources":["C:/Users/Abc/Documents/Projects/RAMS-E/frontend/src/components/IngredientsForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Card, Container, Grid, TextField,  } from '@mui/material';\r\nimport { isEditable } from '@testing-library/user-event/dist/utils';\r\n\r\n\r\ninterface IngredientsFormFunction{\r\n    parentSetArray: Function\r\n}\r\n\r\nfunction IngredientsForm(props: IngredientsFormFunction){\r\n\r\n    const [ingredientsList, setIngredientsList] = useState<string[]>([]);\r\n    const [newIngredient, setNewIngredient] = useState(\"\"); \r\n\r\n\r\n    function handleAddIngredient(ingredient: string){\r\n\r\n        var csv = ingredient.split(\",\")\r\n\r\n        console.log(\"ings\" + ingredientsList);\r\n        if(newIngredient.length > 0){\r\n\r\n            var newList = [...ingredientsList, ...csv]\r\n            setIngredientsList(newList);\r\n            props.parentSetArray(newList);\r\n\r\n            setNewIngredient(\"\");\r\n        }\r\n    }\r\n\r\n    function handleRemoveIngredient(event: React.MouseEvent<HTMLButtonElement> ){\r\n\r\n        var index = parseInt(event.currentTarget.id);\r\n        var newList = [...ingredientsList]\r\n        newList.splice(index, 1);\r\n        setIngredientsList(newList);\r\n\r\n    }\r\n\r\n    var i = -1;\r\n    var output = (\r\n        <Container key={\"\" + ingredientsList} style={{marginBottom: \"5%\"}}>\r\n            \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={10}>\r\n                    <TextField id=\"newIngredient\" style={{width:\"100%\"}} value= {newIngredient} helperText={\"Enter ingredients one at a time or comma separated\"} onChange={(e) =>\r\n                        setNewIngredient(e.currentTarget.value)\r\n                    }/>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button style={styles.addButton} id=\"addIngredient\" variant=\"contained\" onClick={() => {\r\n                        handleAddIngredient(newIngredient);\r\n                    }}> + </Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            \r\n            <Grid direction=\"row\" container spacing={2} style={styles.grid}>\r\n                {ingredientsList.map(function(ingredient) {\r\n                    i++;\r\n                    console.log(ingredientsList)\r\n                    return (\r\n                        <Grid item key={ingredient} xs={3}>\r\n                            <Card style={styles.inputIngredient} id={\"\" + i}>\r\n                                {ingredient}\r\n                                <Button id={\"\" + i} variant=\"contained\" onClick={(e) => {\r\n                                    handleRemoveIngredient(e);\r\n                                }}>-</Button>\r\n                            </Card>\r\n                            \r\n\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n\r\n        </Container>   \r\n    )\r\n\r\n    return output\r\n}\r\n\r\nconst styles = ({\r\n    addButton:{\r\n        backgroundColor: \"#a65021\",\r\n        width: \"100%\",\r\n        height: \"70%\",\r\n    },\r\n    inputIngredient:{\r\n        fontFamily: \"Garamond\",\r\n        width:\"100%\",\r\n        fontSize: \"24px\",\r\n        display: 'flex',        \r\n        justifyContent: \"space-between\",\r\n        paddingLeft:\"5%\",\r\n        paddingRight:\"5%\",\r\n        paddingTop:\"2%\",\r\n        paddingBottom:\"2%\"\r\n    },\r\n    grid:{\r\n       \r\n    }\r\n})\r\n\r\n\r\nexport default IngredientsForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}