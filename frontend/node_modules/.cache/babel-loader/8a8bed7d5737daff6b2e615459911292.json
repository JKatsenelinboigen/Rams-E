{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abc\\\\Documents\\\\Projects\\\\Recipe Generator\\\\rams-e\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Grid } from '@mui/material';\nimport IngredientsForm from './components/IngredientsForm';\nimport SubmitForm from './components/SubmitForm';\nimport Recipe from './components/Recipe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [writtenRecipe, setWrittenRecipe] = useState(\"\");\n  const [isLoading, setIsLoading] = useState();\n  var output = /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      style: styles.headerRectangle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.headerText,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"RAMS-E: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"A GPT-3 based AI recipe generator. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"100% unique, original recipes at the press of a button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(SubmitForm, {\n        ingredients: ingredientsList,\n        setWrittenRecipe: setWrittenRecipe,\n        setIsLoading: setIsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngredientsForm, {\n        parentSetArray: setIngredientsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  var recipe;\n  if (isLoading == true) {\n    recipe = /*#__PURE__*/_jsxDEV(Container, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  } else {\n    console.log(\"isloading false\");\n    recipe = /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Recipe, {\n        writtenRecipe: writtenRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [output, \",\", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: \"image here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0qdgX0HbfQ6NSunL/kGGxYv+9rc=\");\n_c = App;\nconst styles = {\n  headerText: {\n    color: \"#FFF\",\n    fontFamily: \"Garamond\"\n  },\n  headerRectangle: {\n    backgroundColor: \"#000\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Grid","IngredientsForm","SubmitForm","Recipe","App","ingredientsList","setIngredientsList","writtenRecipe","setWrittenRecipe","isLoading","setIsLoading","output","styles","headerRectangle","headerText","recipe","console","log","color","fontFamily","backgroundColor"],"sources":["C:/Users/Abc/Documents/Projects/Recipe Generator/rams-e/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Grid } from '@mui/material';\nimport IngredientsForm from './components/IngredientsForm';\nimport SubmitForm from './components/SubmitForm';\nimport Recipe from './components/Recipe';\n\nfunction App() {\n\n  const [ingredientsList, setIngredientsList] = useState<string[]>([]);\n  const [writtenRecipe, setWrittenRecipe] = useState<string>(\"\");\n\n  const [isLoading, setIsLoading] = useState();\n      \n\n  var output = (\n    <Container>\n      <Container style ={styles.headerRectangle}>\n        <div style={styles.headerText}> \n          <h1>RAMS-E: </h1>\n          <h3>A GPT-3 based AI recipe generator. </h3>\n          <h3>100% unique, original recipes at the press of a button</h3>\n        </div>\n      </Container>\n\n      <Container>\n        <SubmitForm ingredients={ingredientsList} setWrittenRecipe={setWrittenRecipe} setIsLoading={setIsLoading}/>\n        <IngredientsForm parentSetArray={setIngredientsList}/>\n      </Container>\n    \n    </Container>\n  );\n\n  \n  var recipe;\n    if(isLoading == true){\n      recipe = (\n        <Container>\n          Loading...\n        </Container>\n      )\n    }else{\n      console.log(\"isloading false\")\n      recipe = (\n        <Container >  \n          <Recipe writtenRecipe={writtenRecipe} />\n        </Container> \n      )\n    }\n\n  return (\n    <Container >\n      {output},\n      <Grid container spacing={3}>\n        <Grid item>{recipe}</Grid>\n        <Grid item>image here</Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst styles = ({\n  headerText: {\n    color: \"#FFF\",\n    fontFamily: \"Garamond\",\n  },\n  headerRectangle:{\n    backgroundColor: \"#000\",\n  }\n})\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,QAAQ,eAAe;AAC/C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE9D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,EAAE;EAG5C,IAAIa,MAAM,gBACR,QAAC,SAAS;IAAA,wBACR,QAAC,SAAS;MAAC,KAAK,EAAGC,MAAM,CAACC,eAAgB;MAAA,uBACxC;QAAK,KAAK,EAAED,MAAM,CAACE,UAAW;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA4C,eAC5C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+D;MAAA;QAAA;QAAA;QAAA;MAAA;IAC3D;MAAA;MAAA;MAAA;IAAA,QACI,eAEZ,QAAC,SAAS;MAAA,wBACR,QAAC,UAAU;QAAC,WAAW,EAAET,eAAgB;QAAC,gBAAgB,EAAEG,gBAAiB;QAAC,YAAY,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3G,QAAC,eAAe;QAAC,cAAc,EAAEJ;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C;EAAA;IAAA;IAAA;IAAA;EAAA,QAGf;EAGD,IAAIS,MAAM;EACR,IAAGN,SAAS,IAAI,IAAI,EAAC;IACnBM,MAAM,gBACJ,QAAC,SAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGX;EACH,CAAC,MAAI;IACHC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BF,MAAM,gBACJ,QAAC,SAAS;MAAA,uBACR,QAAC,MAAM;QAAC,aAAa,EAAER;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAE3C;EACH;EAEF,oBACE,QAAC,SAAS;IAAA,WACPI,MAAM,oBACP,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAA,wBACzB,QAAC,IAAI;QAAC,IAAI;QAAA,UAAEI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1B,QAAC,IAAI;QAAC,IAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEhB;AAAC,GApDQX,GAAG;AAAA,KAAHA,GAAG;AAsDZ,MAAMQ,MAAM,GAAI;EACdE,UAAU,EAAE;IACVI,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;EACd,CAAC;EACDN,eAAe,EAAC;IACdO,eAAe,EAAE;EACnB;AACF,CAAE;AACF,eAAehB,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}