{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abc\\\\Documents\\\\Projects\\\\Recipe Generator\\\\rams-e\\\\src\\\\components\\\\IngredientsForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Container, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientsForm() {\n  _s();\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [newIngredient, setNewIngredient] = useState(\"\");\n  function handleAddIngredient(ingredient) {\n    if (newIngredient.length > 0) {\n      setIngredientsList(ingredientsList => [...ingredientsList, ingredient]);\n      setNewIngredient(\"\");\n    }\n  }\n  var output = /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"newIngredient\",\n      value: newIngredient,\n      onChange: e => setNewIngredient(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => {\n        handleAddIngredient(newIngredient);\n      },\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), ingredientsList.map(function (ingredient) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: ingredient,\n          inputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n  return output;\n}\n_s(IngredientsForm, \"A49Aia3EMji4uFCVSE1yg/5kNiQ=\");\n_c = IngredientsForm;\nexport default IngredientsForm;\nvar _c;\n$RefreshReg$(_c, \"IngredientsForm\");","map":{"version":3,"names":["React","useState","Button","Container","TextField","IngredientsForm","ingredientsList","setIngredientsList","newIngredient","setNewIngredient","handleAddIngredient","ingredient","length","output","e","currentTarget","value","map","readOnly"],"sources":["C:/Users/Abc/Documents/Projects/Recipe Generator/rams-e/src/components/IngredientsForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Container, TextField,  } from '@mui/material';\r\nimport { isEditable } from '@testing-library/user-event/dist/utils';\r\n\r\ntype Props = {\r\n    title: string,\r\n    children: JSX.Element,\r\n  };\r\n\r\nfunction IngredientsForm(){\r\n\r\n    const [ingredientsList, setIngredientsList] = useState<string[]>([]);\r\n    const [newIngredient, setNewIngredient] = useState(\"\"); \r\n\r\n\r\n    function handleAddIngredient(ingredient: string){\r\n\r\n        if(newIngredient.length > 0){\r\n            setIngredientsList(ingredientsList => [...ingredientsList, ingredient]);\r\n            setNewIngredient(\"\");\r\n        }\r\n    }\r\n\r\n    var output = (\r\n        <Container>\r\n            \r\n            <TextField id=\"newIngredient\" value= {newIngredient} onChange={(e) =>\r\n                setNewIngredient(e.currentTarget.value)\r\n            }/>\r\n\r\n            <Button variant=\"contained\" onClick={() => {\r\n                handleAddIngredient(newIngredient);\r\n            }}> + </Button>\r\n\r\n        \r\n            {ingredientsList.map(function(ingredient) {\r\n                return (\r\n                    <Container>\r\n                        <TextField value={ingredient} inputProps={{readOnly: true}}/>\r\n                    </Container>\r\n                )\r\n            })}\r\n\r\n            \r\n\r\n        </Container>   \r\n    )\r\n\r\n    return output\r\n}\r\n\r\n\r\n\r\nexport default IngredientsForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,QAAU,eAAe;AAAC;AAQ/D,SAASC,eAAe,GAAE;EAAA;EAEtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGtD,SAASS,mBAAmB,CAACC,UAAkB,EAAC;IAE5C,IAAGH,aAAa,CAACI,MAAM,GAAG,CAAC,EAAC;MACxBL,kBAAkB,CAACD,eAAe,IAAI,CAAC,GAAGA,eAAe,EAAEK,UAAU,CAAC,CAAC;MACvEF,gBAAgB,CAAC,EAAE,CAAC;IACxB;EACJ;EAEA,IAAII,MAAM,gBACN,QAAC,SAAS;IAAA,wBAEN,QAAC,SAAS;MAAC,EAAE,EAAC,eAAe;MAAC,KAAK,EAAGL,aAAc;MAAC,QAAQ,EAAGM,CAAC,IAC7DL,gBAAgB,CAACK,CAAC,CAACC,aAAa,CAACC,KAAK;IACzC;MAAA;MAAA;MAAA;IAAA,QAAE,eAEH,QAAC,MAAM;MAAC,OAAO,EAAC,WAAW;MAAC,OAAO,EAAE,MAAM;QACvCN,mBAAmB,CAACF,aAAa,CAAC;MACtC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,EAGdF,eAAe,CAACW,GAAG,CAAC,UAASN,UAAU,EAAE;MACtC,oBACI,QAAC,SAAS;QAAA,uBACN,QAAC,SAAS;UAAC,KAAK,EAAEA,UAAW;UAAC,UAAU,EAAE;YAACO,QAAQ,EAAE;UAAI;QAAE;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD;IAEpB,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAKT;EAED,OAAOL,MAAM;AACjB;AAAC,GAxCQR,eAAe;AAAA,KAAfA,eAAe;AA4CxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}